plugins {
    id 'com.android.application'
}

android {

    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {

        applicationId "hu.zybon.zybsolitaire"
        minSdkVersion 20
        targetSdkVersion 30
        versionCode 1
        versionName readVersion()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    incrementVersion()
    namespace 'hu.zybon.zybsolitaire'
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation files('libs/ZybAndroid.jar')
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

def readVersion(){

    def versionPropsFile = file('version.properties')

    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))
        def version = versionProps['version']
//        gradle.taskGraph.whenReady { taskGraph ->
//            if (taskGraph.hasTask(assembleDebug)) {
//                def versionInt = version.toInteger() + 1
//                version = versionInt.toString()
//                versionProps['version'] = version
        println("version number: 1."+version)
//                versionProps.store(versionPropsFile.newWriter(), null)
//            }
//        }

        return "1."+version
    }
    else {
        throw new GradleException("Could not read version.properties!")
    }

}

def incrementVersion(){
    gradle.taskGraph.whenReady { taskGraph ->
        if (taskGraph.hasTask(assembleDebug)) {

            def versionPropsFile = file('version.properties')

            if (versionPropsFile.canRead()) {
                def Properties versionProps = new Properties()

                versionProps.load(new FileInputStream(versionPropsFile))
                def version = versionProps['version'].toInteger() + 1
                versionProps['version'] = version.toString()
//                println("incement new version number: 1."+version)
                versionProps.store(versionPropsFile.newWriter(), null)
            } else {
                throw new GradleException("Could not read version.properties!")
            }
        }
    }
}

